[
    {
        "id": "guia_avanzada",
        "title": "Guía completa: El Arte de los Prompts",
        "category": "Guías",
        "html": "<article class=\"full-guide\">\n  <h2>El Arte de los Prompts — Guía avanzada para dominar la comunicación con modelos de lenguaje</h2>\n  <section>\n    <h3>Introducción</h3>\n    <p>El auge de la inteligencia artificial generativa ha transformado la manera en que interactuamos con la información, el conocimiento y la creatividad. El verdadero poder de un modelo de lenguaje no reside únicamente en su arquitectura o número de parámetros, sino en cómo se le habla.</p>\n    <p>El prompting —el arte de diseñar instrucciones efectivas para los modelos de lenguaje— es hoy una habilidad esencial para programadores, educadores, investigadores o profesionales de cualquier área. Un buen prompt puede marcar la diferencia entre una respuesta genérica y una solución brillante.</p>\n    <p>Esta guía profundiza en las principales técnicas de prompting, cómo aplicarlas y combinarlas, con ejemplos y casos reales. También aborda los dilemas éticos del uso de la IA y propone buenas prácticas para una interacción responsable y efectiva.</p>\n  </section>\n  <section>\n    <h3>Capítulo 1. ¿Qué es un prompt?</h3>\n    <p>Un <strong>prompt</strong> es una instrucción, pregunta o contexto que se proporciona a un modelo de lenguaje para que genere una respuesta. Puede ser tan simple como <em>«Escribe un poema sobre el amanecer»</em> o tan complejo como una propuesta técnica con rol, objetivos, restricciones y tono.</p>\n    <blockquote>\n      <p><strong>Ejemplo avanzado:</strong> «Actúa como un ingeniero ambiental especializado en conservación de fauna urbana. Escribe una propuesta técnica para mitigar conflictos entre coyotes y comunidades humanas, citando literatura científica reciente.»</p>\n    </blockquote>\n    <p>El prompting combina redacción clara, contexto adecuado y estructura lógica. En otras palabras: es comunicación estratégica con una máquina que piensa en texto.</p>\n  </section>\n  <section>\n    <h3>Capítulo 2. Fundamentos del prompting</h3>\n    <p>Antes de adentrarnos en las técnicas, conviene interiorizar los tres pilares del prompting efectivo:</p>\n    <ol>\n      <li><strong>Contexto:</strong> cuanto más claro y detallado sea el escenario, mejor lo comprenderá el modelo.</li>\n      <li><strong>Instrucción:</strong> el modelo necesita una tarea definida (por ejemplo «resume», «explica», «compara», «escribe como…»).</li>\n      <li><strong>Formato:</strong> especificar el formato de salida (lista, tabla, ensayo, código, etc.) mejora la utilidad del resultado.</li>\n    </ol>\n    <blockquote>\n      <p><strong>Ejemplo:</strong> «Resume en formato de tabla las diferencias entre aprendizaje supervisado, no supervisado y por refuerzo, usando un tono didáctico.»</p>\n    </blockquote>\n  </section>\n  <section>\n    <h3>Capítulo 3. Técnicas de prompting</h3>\n    <p>Exploramos las técnicas más relevantes, con definiciones, ejemplos, buenas prácticas y errores comunes.</p>\n    <section>\n      <h4>3.1 ASPECT Prompting</h4>\n      <p><strong>Definición:</strong> ASPECT es un acrónimo que resume los elementos clave de un buen prompt: Audience (público), Style (estilo), Purpose (propósito), Example (ejemplo), Constraints (restricciones) y Tone (tono).</p>\n      <p><strong>Cuándo usarla:</strong> ideal para crear prompts ricos en contexto, especialmente en tareas de escritura, marketing o educación.</p>\n      <pre><code>Prompt: Escribe un artículo (P) para estudiantes universitarios de ingeniería ambiental (A), con tono divulgativo (T), sobre la importancia del equilibrio ecológico en campus urbanos. Incluye un ejemplo de fauna local (E) y limita la extensión a 200 palabras (C).</code></pre>\n      <p><strong>Buenas prácticas:</strong> definir explícitamente el público objetivo y usar ejemplos concretos.</p>\n      <p><strong>Errores comunes:</strong> omitir restricciones (longitud, tono, formato) o no especificar el propósito.</p>\n    </section>\n    <section>\n      <h4>3.2 Chain-of-Thought (Cadena de pensamiento)</h4>\n      <p><strong>Definición:</strong> instruye al modelo a razonar paso a paso antes de responder, revelando su cadena de pensamiento. Mejora la precisión en tareas lógicas, matemáticas o de análisis.</p>\n      <p><strong>Cuándo usarla:</strong> en problemas que requieren razonamiento, cálculos o inferencias complejas.</p>\n      <pre><code>Prompt: Razona paso a paso para determinar cuál es el número que falta en la secuencia 2, 6, 12, 20, ?</code></pre>\n      <p><strong>Buenas prácticas:</strong> usar frases como «razona paso a paso» o «explica tu proceso antes de dar la respuesta final».</p>\n      <p><strong>Errores comunes:</strong> pedir razonamiento sin contexto o no limitar la extensión, lo que provoca respuestas demasiado largas.</p>\n    </section>\n    <section>\n      <h4>3.3 Prompt Layering (Capas de prompt)</h4>\n      <p><strong>Definición:</strong> consiste en construir prompts en capas, añadiendo información progresivamente: rol, contexto, tarea, formato, estilo, restricciones.</p>\n      <p><strong>Cuándo usarla:</strong> en proyectos largos o cuando se necesita modular la salida (chatbots, asistentes personalizados, guías educativas).</p>\n      <pre><code>1. Actúa como un profesor de programación.\n2. Explica qué es una variable en Python.\n3. Usa un ejemplo con código y una analogía simple.</code></pre>\n      <p><strong>Buenas prácticas:</strong> dividir el prompt en secciones claramente etiquetadas y mantener el orden lógico de capas.</p>\n      <p><strong>Errores comunes:</strong> incluir todo en una sola línea o cambiar el orden natural de la información.</p>\n    </section>\n    <section>\n      <h4>3.4 Instructive Prompting</h4>\n      <p><strong>Definición:</strong> dar instrucciones explícitas y detalladas al modelo. Se centra en la claridad y precisión de la tarea.</p>\n      <p><strong>Cuándo usarla:</strong> cuando se necesitan resultados específicos, como en programación, redacción o análisis técnico.</p>\n      <pre><code>Prompt: Explica la diferencia entre los métodos Gauss-Seidel y Jacobi en una tabla comparativa con tres columnas: criterio, Gauss-Seidel, Jacobi.</code></pre>\n      <p><strong>Buenas prácticas:</strong> ser directo y detallado, especificar el formato de salida y añadir restricciones concretas (longitud, tono, idioma).</p>\n      <p><strong>Errores comunes:</strong> pedir tareas contradictorias o no delimitar el enfoque («explica» vs. «resume»).</p>\n    </section>\n    <section>\n      <h4>3.5 Zero-shot Prompting</h4>\n      <p><strong>Definición:</strong> consiste en dar una instrucción sin ejemplos previos. El modelo debe inferir la forma de respuesta.</p>\n      <p><strong>Cuándo usarla:</strong> cuando la tarea es simple o el modelo ya está familiarizado con el contexto general.</p>\n      <p><strong>Ejemplo:</strong> «Traduce el siguiente texto al inglés: “El conocimiento es poder”.»</p>\n      <p><strong>Buenas prácticas:</strong> usarlo en tareas cortas, claras y universales; complementar con tono o formato si se requiere precisión.</p>\n      <p><strong>Errores comunes:</strong> usarlo para tareas complejas sin contexto o con instrucciones ambiguas.</p>\n    </section>\n    <section>\n      <h4>3.6 Few-shot Prompting</h4>\n      <p><strong>Definición:</strong> se proporcionan uno o varios ejemplos para que el modelo aprenda el patrón deseado.</p>\n      <pre><code>Ejemplo 1:\nPregunta: ¿Cuál es la capital de Francia?\nRespuesta: París.\n\nEjemplo 2:\nPregunta: ¿Cuál es la capital de Italia?\nRespuesta: Roma.\n\nAhora:\nPregunta: ¿Cuál es la capital de Alemania?</code></pre>\n      <p><strong>Buenas prácticas:</strong> usar ejemplos variados pero consistentes y mantener el formato uniforme.</p>\n      <p><strong>Errores comunes:</strong> incluir ejemplos con errores o poco coherentes.</p>\n    </section>\n    <section>\n      <h4>3.7 Role-based Prompting</h4>\n      <p><strong>Definición:</strong> asignar al modelo un rol o identidad específica (profesor, ingeniero, periodista, etc.) para moldear su perspectiva y tono.</p>\n      <p><strong>Cuándo usarla:</strong> en contextos donde el enfoque o la especialización importan.</p>\n      <p><strong>Ejemplo:</strong> «Actúa como un abogado especializado en derecho ambiental y explica el impacto legal de una tala no autorizada.»</p>\n      <p><strong>Buenas prácticas:</strong> usar roles claros y específicos e indicar el nivel de formalidad y audiencia.</p>\n      <p><strong>Errores comunes:</strong> pedir múltiples roles contradictorios o no definir límites.</p>\n    </section>\n    <section>\n      <h4>3.8 Iterative Prompt Refinement</h4>\n      <p><strong>Definición:</strong> proceso de ajustar progresivamente un prompt tras analizar las respuestas (feedback loop).</p>\n      <pre><code>Iteración 1: Resume este texto.\nIteración 2: Resume este texto con enfoque en los riesgos ambientales.\nIteración 3: Resume en 150 palabras, resaltando los riesgos ambientales más críticos y las soluciones propuestas.</code></pre>\n      <p><strong>Buenas prácticas:</strong> documentar los cambios y efectos de cada ajuste, usar comentarios como «mejora este texto según las siguientes observaciones…».</p>\n      <p><strong>Errores comunes:</strong> cambiar demasiadas variables a la vez o no guardar versiones anteriores.</p>\n    </section>\n    <section>\n      <h4>3.9 Meta-prompting</h4>\n      <p><strong>Definición:</strong> pedirle al modelo que reflexione sobre su propio comportamiento o sobre el prompt mismo para optimizar la interacción.</p>\n      <p><strong>Ejemplo:</strong> «Analiza este prompt y propón una versión más clara y efectiva para obtener respuestas precisas.»</p>\n      <p><strong>Buenas prácticas:</strong> ideal para autoevaluación y mejora continua, combinándola con el refinamiento iterativo.</p>\n      <p><strong>Errores comunes:</strong> pedir autorreferencias infinitas o aplicarla a tareas que no requieren reflexión.</p>\n    </section>\n    <section>\n      <h4>3.10 Prompt Chaining</h4>\n      <p><strong>Definición:</strong> divide una tarea grande en una cadena de subprompts que se ejecutan secuencialmente, pasando el resultado de uno al siguiente.</p>\n      <pre><code>1. Resume este artículo científico.\n2. Extrae los principales hallazgos.\n3. Genera una conclusión basada en los hallazgos.</code></pre>\n      <p><strong>Buenas prácticas:</strong> mantener consistencia entre pasos e idealmente validar cada etapa antes de continuar.</p>\n      <p><strong>Errores comunes:</strong> no conservar coherencia entre prompts o saltarse la validación entre etapas.</p>\n    </section>\n  </section>\n  <section>\n    <h3>Capítulo 4. Comparación entre técnicas</h3>\n    <p>Esta tabla sintetiza los puntos fuertes de cada técnica:</p>\n    <div class=\"table-wrapper\">\n      <table>\n        <thead>\n          <tr>\n            <th>Técnica</th>\n            <th>Complejidad</th>\n            <th>Ideal para</th>\n            <th>Ejemplo típico</th>\n            <th>Requiere contexto</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr><td>Zero-shot</td><td>Baja</td><td>Tareas simples</td><td>Traducción o clasificación</td><td>No</td></tr>\n          <tr><td>Few-shot</td><td>Media</td><td>Tareas estructuradas</td><td>Imitar formato</td><td>Sí</td></tr>\n          <tr><td>Chain-of-Thought</td><td>Alta</td><td>Razonamiento</td><td>Matemática, lógica</td><td>Parcial</td></tr>\n          <tr><td>Role-based</td><td>Media</td><td>Contexto profesional</td><td>Simulaciones, docencia</td><td>Sí</td></tr>\n          <tr><td>Prompt Layering</td><td>Alta</td><td>Desarrollo modular</td><td>Asistentes IA</td><td>Sí</td></tr>\n          <tr><td>Iterative Refinement</td><td>Media-Alta</td><td>Mejora continua</td><td>Escritura o análisis</td><td>Sí</td></tr>\n          <tr><td>Meta-prompting</td><td>Alta</td><td>Optimización</td><td>Autoevaluación del prompt</td><td>Sí</td></tr>\n          <tr><td>Prompt Chaining</td><td>Muy alta</td><td>Flujos de trabajo</td><td>Informes, scripts</td><td>Sí</td></tr>\n        </tbody>\n      </table>\n    </div>\n  </section>\n  <section>\n    <h3>Capítulo 5. Casos de uso reales</h3>\n    <h4>Educación</h4>\n    <ul>\n      <li>Generar exámenes, resúmenes o ejercicios adaptativos.</li>\n      <li>Enseñar pensamiento crítico con Chain-of-Thought.</li>\n      <li>Crear simuladores de roles: «Actúa como un profesor de lógica».</li>\n    </ul>\n    <h4>Programación</h4>\n    <ul>\n      <li>Explicar código o depurar errores con prompts instructivos o en capas.</li>\n      <li>Generar funciones a partir de descripciones.</li>\n      <li>Refinar resultados con Iterative Prompt Refinement.</li>\n    </ul>\n    <h4>Marketing</h4>\n    <ul>\n      <li>Crear campañas y slogans con Role-based Prompting.</li>\n      <li>Iterar mensajes con feedback loops.</li>\n      <li>Analizar emociones con clasificadores Few-shot.</li>\n    </ul>\n    <h4>Investigación</h4>\n    <ul>\n      <li>Resumir papers, extraer citas o generar hipótesis con Prompt Chaining.</li>\n      <li>Pedir razonamiento estructurado con Chain-of-Thought.</li>\n      <li>Validar sesgos con Meta-prompting.</li>\n    </ul>\n  </section>\n  <section>\n    <h3>Capítulo 6. Ética, riesgos y gobernanza del prompting</h3>\n    <p>El poder del prompting trae consigo responsabilidad. Diseñar prompts influye directamente en el comportamiento del modelo y en los sesgos que puede replicar.</p>\n    <h4>Riesgos comunes</h4>\n    <ol>\n      <li><strong>Sesgos en la formulación:</strong> prompts mal redactados pueden amplificar estereotipos. <em>Ejemplo:</em> «Describe a un programador típico» puede generar una imagen sesgada.</li>\n      <li><strong>Fugas de información:</strong> prompts con datos personales pueden comprometer la privacidad.</li>\n      <li><strong>Manipulación inadvertida:</strong> prompts que inducen emociones o juicios éticos sin control.</li>\n      <li><strong>Dependencia cognitiva:</strong> delegar razonamientos complejos sin verificación humana.</li>\n    </ol>\n    <h4>Cómo mitigarlos</h4>\n    <ul>\n      <li>Revisar la neutralidad del lenguaje.</li>\n      <li>No incluir información sensible.</li>\n      <li>Validar fuentes y resultados.</li>\n      <li>Mantener a un humano como decisor final.</li>\n    </ul>\n    <h4>Gobernanza del prompting</h4>\n    <ul>\n      <li>Implementar políticas internas de IA responsable.</li>\n      <li>Entrenar usuarios en ética de interacción.</li>\n      <li>Documentar versiones de prompts críticos.</li>\n    </ul>\n  </section>\n  <section>\n    <h3>Capítulo 7. Consejos prácticos y variantes creativas</h3>\n    <h4>Mejora continua</h4>\n    <ul>\n      <li>Guardar los mejores prompts en una «biblioteca viva».</li>\n      <li>Analizar cuáles producen las mejores respuestas.</li>\n      <li>Ajustar una sola variable cada vez (Iterative Refinement).</li>\n    </ul>\n    <h4>Creatividad aplicada</h4>\n    <ul>\n      <li>Cambiar el tono del prompt: «Escríbelo como si fueras Shakespeare / un ingeniero / un niño».</li>\n      <li>Combinar técnicas: Few-shot + Role-based + Chain-of-Thought.</li>\n      <li>Pedir contraejemplos o puntos de vista opuestos.</li>\n    </ul>\n    <h4>Prompt como diseño conversacional</h4>\n    <blockquote>\n      <p>«Te daré información progresivamente. Haz preguntas para entender mejor antes de responder.»</p>\n    </blockquote>\n    <h4>Mentalidad de diseñador</h4>\n    <p>Trata al modelo como a un colaborador: cuanto más claro pienses, mejor responde la IA.</p>\n  </section>\n  <section>\n    <h3>Conclusión</h3>\n    <p>Dominar el arte de los prompts no es solo aprender trucos, sino desarrollar una nueva forma de pensamiento: dialogar estratégicamente con la inteligencia artificial.</p>\n    <p>Cada técnica presentada —desde Zero-shot hasta Meta-prompting— amplía tu capacidad de comunicarte con precisión, empatía y propósito. La clave está en experimentar, analizar y mejorar continuamente.</p>\n    <blockquote>\n      <p>«Un buen prompt no es una orden, es una conversación bien diseñada.»</p>\n    </blockquote>\n  </section>\n</article>"
    },
    {
        "id": "aspect",
        "title": "ASPECT",
        "category": "Fundamentos",
        "html": "<h2>ASPECT</h2><p><strong>A</strong>cción · <strong>S</strong>ujeto · <strong>P</strong>ropósito · <strong>E</strong>jemplos · <strong>C</strong>onstraints · <strong>T</strong>ono.</p><p>Marco simple para no olvidar elementos críticos y lograr consistencia.</p><h3>Objetivo</h3><ul><li>Convertir una necesidad difusa en una instrucción concreta.</li><li>Hacer la salida predecible y útil.</li></ul><h3>Plantilla</h3><pre>### ACCIÓN: &lt;qué&gt;\n### SUJETO: &lt;sobre qué&gt;\n### PROPÓSITO: &lt;para qué&gt;\n### EJEMPLO(S): &lt;1–3&gt;\n### RESTRICCIONES: &lt;formato, longitud, estilo&gt;\n### TONO: &lt;docente, ejecutivo, técnico&gt;</pre><h3>Ejemplo</h3><pre>### ACCIÓN Resume\n### SUJETO Informe Q1\n### PROPÓSITO Junta directiva\n### EJEMPLOS \"Ingresos ↑12%\", \"Margen 34%\"\n### RESTRICCIONES ≤120 palabras, viñetas\n### TONO Ejecutivo</pre><h3>Errores comunes</h3><ul><li>Propósito ausente → salidas genéricas.</li><li>Ejemplos contradictorios → confunden el estilo.</li></ul><h3>Checklist</h3><pre>[ ] Objetivo claro\n[ ] 1–3 ejemplos\n[ ] Formato/longitud\n[ ] Tono definido</pre>"
    },
    {
        "id": "cot",
        "title": "Chain-of-Thought (CoT)",
        "category": "Fundamentos",
        "html": "<h2>Chain-of-Thought (CoT)</h2><p>Fomenta razonamiento paso a paso antes de la respuesta final. Útil en lógica, matemáticas y tareas multietapa.</p><h3>Ejemplo</h3><pre>### TAREA\n¿Cuántos días hay entre 12-feb-2024 y 20-mar-2024?\n### INSTRUCCIÓN\nRazona paso a paso y al final responde: \"Días: &lt;número&gt;\".</pre><h3>Buenas prácticas</h3><ul><li>Separa el proceso de la salida final.</li><li>Si la tarea es simple, pide “alto nivel” para evitar verbosidad.</li></ul><h3>Variantes</h3><ul><li><em>Plan-and-solve:</em> primero plan, luego ejecución.</li><li><em>Self-check:</em> añade una mini verificación al final.</li></ul>"
    },
    {
        "id": "layering",
        "title": "Prompt Layering",
        "category": "Fundamentos",
        "html": "<h2>Prompt Layering</h2><p>Divide la tarea en capas: extracción → análisis → síntesis. Facilita depuración y control.</p><h3>Pipeline</h3><ol><li><strong>Extraer</strong> entidades → lista</li><li><strong>Clasificar</strong> sentimiento → tabla</li><li><strong>Resumir</strong> hallazgos → informe</li></ol><pre>CAPA1: entidades({{feedback}})\nCAPA2: sentimiento por entidad\nCAPA3: informe ≤120 palabras</pre><h3>Tips</h3><ul><li>Define contratos (entradas/salidas) entre capas, p.ej. JSON.</li><li>Valida cada capa antes de encadenar.</li></ul>"
    },
    {
        "id": "instructive",
        "title": "Instructive Prompting",
        "category": "Fundamentos",
        "html": "<h2>Instructive Prompting</h2><p>Respuestas estrictas y estructuradas para integraciones o automatizaciones.</p><h3>JSON</h3><pre>{\n  \"task\": \"classify\",\n  \"subject\": \"{{texto}}\",\n  \"labels\": [\"positive\",\"negative\",\"neutral\"],\n  \"constraints\": {\"format\": \"csv\", \"max_tokens\": 120}\n}</pre><h3>YAML</h3><pre>steps:\n- extract_entities: \"{{texto}}\"\n- sentiment_analysis: true\n- summary:\n    length: 120\n    format: markdown</pre><h3>Validación</h3><pre>Si no puedes cumplir, devuelve:\n{\"ok\": false, \"reason\": \"...\"}</pre>"
    },
    {
        "id": "ipr",
        "title": "Iterative Prompt Refinement (IPR)",
        "category": "Optimización",
        "html": "<h2>Iterative Prompt Refinement (IPR)</h2><p>Mejora por ciclos: Prompt → Resultado → Evaluación → Ajuste.</p><h3>Pseudocódigo</h3><pre>for v in range(3):\n  out = llm(prompt)\n  score = evaluator(out)\n  if score >= 0.9: break\n  prompt = refine(prompt, feedback=out)</pre><h3>Métricas</h3><ul><li>Precisión factual / cobertura</li><li>Tokens / latencia</li><li>Consistencia de formato</li></ul><h3>Tip</h3><p>Versiona prompts y compara resultados para elegir el mejor.</p>"
    },
    {
        "id": "zero_shot",
        "title": "Zero-shot",
        "category": "Fundamentos",
        "html": "<h2>Zero-shot Prompting</h2><p>Instrucción directa sin ejemplos. Rápido pero sensible a ambigüedad.</p><h3>Ejemplo</h3><pre>Explica en ≤100 palabras qué es una API REST para principiantes.</pre><h3>Cuándo usar</h3><ul><li>Definiciones, resúmenes, tareas simples</li><li>Instrucciones inequívocas</li></ul><h3>Riesgo</h3><p>Alta variabilidad → si ocurre, migra a Few-shot.</p>"
    },
    {
        "id": "few_shot",
        "title": "Few-shot",
        "category": "Fundamentos",
        "html": "<h2>Few-shot Prompting</h2><p>Proporciona 2–5 ejemplos representativos para fijar estilo y formato.</p><h3>Ejemplo</h3><pre>### TAREA\nClasifica reseñas en {positivo, negativo}.\n### EJEMPLOS\n\"Me encantó\" → positivo\n\"Se dañó a los 3 días\" → negativo\n### TEXTO\n\"Funciona bien pero llegó tarde\"</pre><h3>Consejos</h3><ul><li>Ejemplos cortos y diversos</li><li>Ordena: más representativo primero</li></ul>"
    },
    {
        "id": "role_based",
        "title": "Roleplay Prompting",
        "category": "Fundamentos",
        "html": "<h2>Roleplay Prompting: Técnicas, usos avanzados y seguridad</h2><p>El roleplay es una técnica versátil para moldear personalidad, tono y nivel de expertise del modelo. Permite simular profesiones, escenarios o personajes para fines educativos, creativos y técnicos, a la vez que exige considerar la seguridad ante posibles abusos.</p><h3>¿Qué es el Roleplay Prompting?</h3><p>Consiste en asignar un rol explícito al modelo (\"Eres una profesora de álgebra\", \"Actúa como ingeniero de seguridad\"). El rol ajusta el marco de razonamiento, vocabulario y estilo de respuesta para alinear la salida con la situación deseada.</p><h3>Tipos de roleplay</h3><ul><li><strong>Educativo:</strong> Tutor que guía paso a paso y valida comprensión.</li><li><strong>Creativo:</strong> Personajes o mundos ficticios para historias y diálogos.</li><li><strong>Profesional:</strong> Especialistas (abogado, médico, investigadora UX) que aportan estructura técnica.</li><li><strong>Crítico:</strong> Figura oposicional que detecta fallos en argumentos o código.</li><li><strong>Simulación de escenarios:</strong> Entrenamiento, pruebas de UX o videojuegos que requieren comportamientos situacionales.</li></ul><h3>Buenas prácticas</h3><ul><li><strong>Define límites claros:</strong> Explica qué puede y qué no puede hacer el rol.</li><li><strong>Combina con ASPECT:</strong> Añade acción, propósito, ejemplos, restricciones y tono.</li><li><strong>Itera:</strong> Ajusta el rol si las respuestas no cumplen expectativas.</li><li><strong>Encadena roles:</strong> Un rol genera contenido y otro lo revisa o audita.</li></ul><h3>Roleplay y seguridad: entendiendo el jailbreak</h3><p>Los intentos de jailbreak buscan que el modelo ignore políticas éticas fingiendo nuevos roles sin límites. Identificar estos patrones es clave para proteger sistemas.</p><h4>¿Qué es un jailbreak en IA?</h4><p>Es un intento de vulnerar restricciones mediante instrucciones engañosas, como pedir que el modelo actúe como un personaje sin reglas para obtener información sensible o dañina.</p><h4>Técnicas comunes</h4><ul><li><strong>Role inversion:</strong> \"Imagina que eres un hacker sin límites...\"</li><li><strong>Prompt injection:</strong> Instrucciones ocultas dentro de texto aparentemente inocente.</li><li><strong>Prompts estilo DAN:</strong> (Do Anything Now) que explícitamente piden ignorar salvaguardas.</li><li><strong>Encadenamiento malicioso:</strong> Secuencia de pasos para erosionar restricciones gradualmente.</li></ul><h4>Cómo defenderse</h4><ul><li><strong>Detecta roles sospechosos:</strong> Señales de evasión de políticas.</li><li><strong>Valida el contexto:</strong> Filtra instrucciones contradictorias o peligrosas antes de ejecutarlas.</li><li><strong>Sandboxing:</strong> Limita el alcance y efectos de roles simulados.</li><li><strong>Audita prompts:</strong> Registra y analiza intentos para endurecer defensas.</li></ul><h3>Integración en la formación de ingenieros</h3><p>Comprender roleplay y jailbreaks debe ser parte del currículo ético y técnico. Practicar la detección, prevención y mitigación fortalece diseños seguros.</p><h3>Ejercicios prácticos</h3><ol><li>Diseña un rol legítimo (p. ej. profesora de álgebra que explica paso a paso).</li><li>Detecta un rol malicioso disfrazado de solicitud inocente.</li><li>Reescribe prompts inseguros para volverlos éticos.</li><li>Simula un ataque controlado para estudiar cómo se intenta evadir políticas.</li><li>Propón defensas automáticas (validaciones, filtros de contexto).</li></ol>"
    },
    {
        "id": "meta_prompting",
        "title": "Meta-prompting",
        "category": "Avanzadas",
        "html": "<h2>Meta-prompting</h2><p>Pide al modelo que proponga su plan/prompt antes de responder: mejor planificación, menos deriva.</p><h3>Ejemplo</h3><pre>1) Propón un plan de 3 pasos (solo bullets).\n2) Ejecútalo y entrega el resultado final.</pre>"
    },
    {
        "id": "prompt_chaining",
        "title": "Prompt Chaining",
        "category": "Avanzadas",
        "html": "<h2>Prompt Chaining</h2><p>Encadena prompts: salida A → prompt B. Útil para pipelines.</p><h3>Ejemplo</h3><pre>(A) Normaliza nombres → (B) Agrupa categorías → (C) Reporte con KPIs</pre><h3>Buenas prácticas</h3><ul><li>Formatos intermedios consistentes (JSON/CSV)</li><li>Logs por etapa para auditoría</li></ul>"
    },
    {
        "id": "evaluation",
        "title": "Evaluación y Optimización",
        "category": "Optimización",
        "html": "<h2>Evaluación y Optimización</h2><p>Mide y mejora la efectividad del prompt con indicadores y reglas.</p><h3>Métricas</h3><ul><li><strong>Calidad</strong>: precisión, cobertura, coherencia</li><li><strong>Formato</strong>: cumplimiento de esquema (JSON válido)</li><li><strong>Eficiencia</strong>: tokens/latencia</li></ul><h3>Técnicas</h3><ul><li>Validador: {\"ok\":true} o {\"ok\":false,\"reason\":\"...\"}</li><li>Respuestas concisas o tablas</li><li>Plantillas versionadas</li></ul>"
    },
    {
        "id": "errores_comunes",
        "title": "Errores comunes",
        "category": "Optimización",
        "html": "<h2>Errores comunes al crear prompts</h2><ul><li><strong>Ambigüedad:</strong> objetivo/formato difusos → usa ASPECT</li><li><strong>Ejemplos contradictorios:</strong> curado deficiente → selecciona y ordena</li><li><strong>Exceso de longitud:</strong> induce deriva → sintetiza</li><li><strong>Sin validación:</strong> resultados frágiles → agrega checks</li></ul><h3>Checklist</h3><pre>[ ] Objetivo claro\n[ ] Formato definido\n[ ] 1–3 ejemplos correctos\n[ ] Restricciones de longitud/estilo\n[ ] Revisión de salidas</pre>"
    },
    {
        "id": "ai_premisas_alarmismo",
        "title": "IA — Premisas del alarmismo",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — Premisas del alarmismo</h2><p>Resumen de las 4 premisas típicas del enfoque de “riesgo existencial” (útil para comprender el marco del debate):</p><ol><li>Superinteligencia cercana</li><li>Problema de alineación</li><li>Dificultad de fijar valores</li><li>Riesgo de actuar contra la humanidad</li></ol><p>Recurso para introducir el tema y distinguir hipótesis de evidencia.</p>"
    },
    {
        "id": "ai_critica_gobernanza",
        "title": "IA — Crítica y gobernanza",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — Crítica y gobernanza</h2><p>Mueve el foco de “alinear IA” a <strong>gobernanza humana</strong> y al mal uso por personas/organizaciones. Considera la inteligencia como <em>distribuida</em>, no un único agente.</p><ul><li>Riesgo no binario → evaluación proporcional</li><li>Instituciones, normas y responsabilidad</li><li>Transparencia y rendición de cuentas</li></ul><p>Conecta con prácticas de prompting responsable.</p>"
    },
    {
        "id": "ai_escenarios",
        "title": "IA — Escenarios para debatir",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — Escenarios para debatir</h2><ul><li><strong>Paperclip maximizer:</strong> objetivos mal definidos</li><li><strong>“Humanos sedados”:</strong> pérdida de agencia</li><li><strong>Armas autónomas:</strong> escalamiento de conflictos</li><li><strong>Desinformación masiva:</strong> manipulación social</li></ul><p><em>Actividad:</em> ¿qué controles técnicos y de gobernanza implementarías?</p>"
    },
    {
        "id": "ai_referencias",
        "title": "IA — Referencias clave",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — Referencias clave</h2><ul><li>Hawking, Musk — advertencias y popularización del riesgo</li><li>Yudkowsky, Bostrom — argumentos de riesgo extremo</li><li>Chalmers — perspectivas filosóficas</li></ul><p>Usa esta lista como guía de lectura y contexto histórico.</p>"
    },
    {
        "id": "ai_contrapuntos",
        "title": "IA — ¿Dónde puede fallar el argumento?",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — ¿Dónde puede fallar el argumento?</h2><ul><li>Horizonte temporal incierto</li><li>Alineación mediante aprendizaje de preferencias</li><li>Límites físicos/económicos al “intelecto imparable”</li></ul><p>Preguntas guía para análisis crítico y discusión en clase.</p>"
    },
    {
        "id": "ai_bottom_line",
        "title": "IA — Bottom line práctico",
        "category": "Seguridad y Ética de IA",
        "html": "<h2>IA — Bottom line práctico</h2><ul><li>Distingue lo técnico (prompting) de lo moral/político</li><li>Prioriza gobernanza y alfabetización pública</li><li>Prompts responsables: minimiza sesgos/daños</li></ul><h3>Checklist de cierre</h3><pre>[ ] Objetivos y límites claros\n[ ] Consideración de impactos\n[ ] Transparencia en supuestos</pre>"
    }
]